@using FSPBook.Data.Entities
@using FSPBook.Portal.Models
@model PaginatedList<Post>

<table class="table">

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DateTimePosted)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Content)
                </td>
                <td>
                    <a asp-page="./Profile"
                       asp-route-authorId="@item.AuthorId">
                        @item.Author.FullName
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

@if ((string)ViewContext.RouteData.Values["page"] == "/Profile")
{
    <a asp-page="./Profile"
       asp-route-pageIndex="@(Model.PageIndex - 1)"
       asp-route-authorId="@Model.ElementAt(0).AuthorId"
       class="btn btn-primary @prevDisabled">
        Previous
    </a>
    <a asp-page="./Profile"
       asp-route-pageIndex="@(Model.PageIndex + 1)"
       asp-route-authorId="@Model.ElementAt(0).AuthorId"
       class="btn btn-primary @nextDisabled">
        Next
    </a>
}
else
{
    <a asp-page="./Index"
       asp-route-pageIndex="@(Model.PageIndex - 1)"
       class="btn btn-primary @prevDisabled">
        Previous
    </a>
    <a asp-page="./Index"
       asp-route-pageIndex="@(Model.PageIndex + 1)"
       class="btn btn-primary @nextDisabled">
        Next
    </a>
}

